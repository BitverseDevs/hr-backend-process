# Generated by Django 4.2 on 2023-05-24 02:09

import datetime
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=25)),
                ('branch_address', models.TextField(max_length=50)),
                ('branch_email', models.EmailField(max_length=254)),
                ('branch_contact_number', models.CharField(max_length=15)),
                ('branch_oic', models.CharField(max_length=25)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TBL_BRANCH_CODE',
            },
        ),
        migrations.CreateModel(
            name='CityMunicipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'TBL_CITYMUNICIPALITY',
            },
        ),
        migrations.CreateModel(
            name='Cutoff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('co_name', models.CharField(max_length=25)),
                ('co_description', models.TextField(max_length=75)),
                ('co_date', models.DateTimeField()),
                ('co_date_from', models.DateField()),
                ('co_date_to', models.DateField()),
                ('co_is_processed', models.BooleanField()),
                ('credit_date', models.DateTimeField()),
                ('payroll_frequency', models.PositiveSmallIntegerField(choices=[(1, 'Monthly'), (2, 'Semi-Monthly'), (3, 'Project-Based'), (4, 'Weekly')], validators=[django.core.validators.MaxValueValidator(4)])),
            ],
            options={
                'db_table': 'TBL_CUTOFF_PERIOD_LIST',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_name', models.CharField(max_length=25)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('dept_branch_code', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='user.branch')),
            ],
            options={
                'db_table': 'TBL_DEPARTMENT_CODE',
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('div_name', models.CharField(max_length=25)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('div_branch_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.branch')),
            ],
            options={
                'db_table': 'TBL_DIVISION_CODE',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_no', models.PositiveSmallIntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(9990)])),
                ('first_name', models.CharField(max_length=25)),
                ('middle_name', models.CharField(blank=True, max_length=25, null=True)),
                ('last_name', models.CharField(max_length=25)),
                ('suffix', models.CharField(blank=True, choices=[('sr', 'Sr.'), ('jr', 'Jr.'), ('iii', 'III/Third'), ('iv', 'IV/Fourth'), ('v', 'V/Fifth')], max_length=4, null=True)),
                ('birthday', models.DateField()),
                ('birth_place', models.CharField(blank=True, max_length=50, null=True)),
                ('civil_status', models.CharField(choices=[('S', 'Single'), ('M', 'Married'), ('A', 'Annulled'), ('W', 'Widowed'), ('SE', 'Separated')], max_length=2)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('address', models.TextField(max_length=50)),
                ('provincial_address', models.TextField(blank=True, max_length=50, null=True)),
                ('mobile_phone', models.CharField(max_length=15)),
                ('email_address', models.EmailField(max_length=254)),
                ('employee_image', models.ImageField(blank=True, null=True, upload_to=user.models.upload_to, verbose_name='Image')),
                ('bio_id', models.PositiveSmallIntegerField(blank=True, null=True, unique=True, validators=[django.core.validators.MaxValueValidator(9990)])),
                ('date_hired', models.DateField()),
                ('date_resigned', models.DateField(blank=True, null=True)),
                ('approver', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_deleted', models.DateField(blank=True, null=True)),
                ('branch_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.branch')),
                ('city_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.citymunicipality')),
                ('department_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.department')),
                ('division_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.division')),
            ],
            options={
                'db_table': 'TBL_EMPLOYEE_PROFILE',
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holiday_date', models.DateField()),
                ('holiday_description', models.TextField(blank=True, max_length=75, null=True)),
                ('holiday_type', models.CharField(choices=[('SH', 'Special Non-working Holiday'), ('LH', 'Legal Working Holiday')], max_length=5, unique=True)),
                ('holiday_location', models.CharField(choices=[('city', 'City'), ('province', 'Province'), ('national', 'National')], max_length=15)),
            ],
            options={
                'db_table': 'TBL_HOLIDAY_TYPE',
            },
        ),
        migrations.CreateModel(
            name='LeavesType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TBL_LEAVES_TYPE',
            },
        ),
        migrations.CreateModel(
            name='PayrollGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('payroll_description', models.TextField(blank=True, max_length=75, null=True)),
                ('monthly_frequency', models.PositiveSmallIntegerField(choices=[(1, 'Monthly'), (2, 'Semi-Monthly'), (3, 'Project-Based'), (4, 'Weekly')], validators=[django.core.validators.MaxValueValidator(4)])),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('used_account', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'db_table': 'TBL_PAYROLL_GROUP_CODE',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos_name', models.CharField(max_length=25)),
                ('pos_description', models.TextField(blank=True, max_length=75, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TBL_POSITION_CODE',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'TBL_PROVINCE',
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_name', models.CharField(max_length=25)),
                ('rank_description', models.TextField(blank=True, max_length=75, null=True)),
                ('is_approver', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TBL_RANK_CODE',
            },
        ),
        migrations.CreateModel(
            name='ScheduleShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('time_in', models.TimeField()),
                ('time_out', models.TimeField()),
                ('grace_period', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('with_overtime', models.BooleanField()),
                ('is_night_shift', models.BooleanField()),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TBL_SCHEDULE_SHIFT',
            },
        ),
        migrations.CreateModel(
            name='UnaccountedAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ua_date_filed', models.DateTimeField(auto_now_add=True)),
                ('ua_description', models.TextField(max_length=75)),
                ('ua_date_from', models.DateTimeField()),
                ('ua_date_to', models.DateTimeField()),
                ('ua_approved_status', models.PositiveSmallIntegerField()),
                ('ua_reason_disapproval', models.TextField(max_length=75)),
                ('ua_total_hour', models.PositiveSmallIntegerField()),
                ('ua_approver1_empno', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('ua_date_approved1', models.DateTimeField(blank=True, null=True)),
                ('ua_approver2_empno', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('ua_date_approved2', models.DateTimeField(blank=True, null=True)),
                ('cutoff_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.cutoff')),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_UNACCOUNTED_ATT',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tin_no', models.CharField(max_length=12)),
                ('tax_form', models.CharField(blank=True, max_length=15, null=True)),
                ('tax_description', models.TextField(blank=True, max_length=75, null=True)),
                ('tax_percentage', models.FloatField(blank=True, null=True)),
                ('tax_amount', models.FloatField(blank=True, null=True)),
                ('payment_frequency', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Semi-Monthly'), (2, 'Monthly'), (3, 'Annual')], null=True, validators=[django.core.validators.MaxValueValidator(4)])),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_TAX_CODE',
            },
        ),
        migrations.CreateModel(
            name='SSS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sss_number', models.CharField(max_length=10)),
                ('sss_contribution_month', models.FloatField(blank=True, null=True)),
                ('sss_with_cashloan_amount', models.FloatField(blank=True, null=True)),
                ('sss_rem_cashloan_amount', models.FloatField(blank=True, null=True)),
                ('sss_with_calloan_amount', models.FloatField(blank=True, null=True)),
                ('sss_rem_callloan_amount', models.FloatField(blank=True, null=True)),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_SSS_CODE',
            },
        ),
        migrations.CreateModel(
            name='ScheduleDaily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_date', models.DateField()),
                ('is_processed', models.BooleanField(blank=True, null=True)),
                ('is_current', models.BooleanField(blank=True, null=True)),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
                ('schedule_shift_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.scheduleshift')),
            ],
            options={
                'db_table': 'TBL_SCHED_DAILY',
            },
        ),
        migrations.CreateModel(
            name='Philhealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ph_no', models.CharField(max_length=10)),
                ('ph_contribution_month', models.FloatField(blank=True, null=True)),
                ('ph_category', models.CharField(blank=True, max_length=10, null=True)),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_PHILHEALTH_CODE',
            },
        ),
        migrations.CreateModel(
            name='PAGIBIG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pagibig_no', models.CharField(max_length=15)),
                ('pagibig_contribution_month', models.FloatField(blank=True, null=True)),
                ('pagibig_with_cloan_amount', models.FloatField(blank=True, null=True)),
                ('pagibig_rem_cloan_amount', models.FloatField(blank=True, null=True)),
                ('pagibig_with_hloan_amount', models.FloatField(blank=True, null=True)),
                ('pagibig_rem_hloan_amount', models.FloatField(blank=True, null=True)),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_PAGIBIG_CODE',
            },
        ),
        migrations.CreateModel(
            name='Overtime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cutoff_code', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('ot_date_filed', models.DateTimeField(auto_now_add=True)),
                ('ot_type', models.CharField(choices=[('WD', 'Whole Day Overtime'), ('BD', 'Before Duty-in'), ('AD', 'After Duty-in')], max_length=2)),
                ('ot_remarks', models.TextField(max_length=75)),
                ('ot_date_from', models.DateTimeField()),
                ('ot_date_to', models.DateTimeField()),
                ('ot_approval_status', models.CharField(choices=[('P1', 'Pending'), ('P2', 'Pending2'), ('APD', 'Approved'), ('DIS', 'Disapproved')], max_length=3)),
                ('ot_reason_disapproval', models.TextField(max_length=100)),
                ('ot_total_hours', models.PositiveSmallIntegerField()),
                ('ot_approver1_empno', models.PositiveSmallIntegerField()),
                ('ot_date_approved1', models.DateTimeField(blank=True, null=True)),
                ('ot_approver2_empno', models.PositiveSmallIntegerField()),
                ('ot_date_approved2', models.DateTimeField(blank=True, null=True)),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_OVERTIME_APP',
            },
        ),
        migrations.CreateModel(
            name='OBT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obt_date_filed', models.DateTimeField(auto_now_add=True)),
                ('obt_type', models.CharField(max_length=20)),
                ('obt_location', models.TextField(max_length=50)),
                ('obt_remarks', models.TextField(max_length=75)),
                ('obt_date_from', models.DateTimeField()),
                ('obt_date_to', models.DateTimeField()),
                ('obt_approval_status', models.CharField(choices=[('P1', 'Pending'), ('P2', 'Pending2'), ('APD', 'Approved'), ('DIS', 'Disapproved')], max_length=3)),
                ('obt_reason_disapproval', models.TextField(blank=True, max_length=50, null=True)),
                ('obt_total_hour', models.PositiveSmallIntegerField()),
                ('obt_approver1_empno', models.PositiveSmallIntegerField()),
                ('obt_date_approved1', models.DateTimeField()),
                ('obt_approver2_empono', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('obt_date_approved2', models.DateTimeField(blank=True, null=True)),
                ('cutoff_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.cutoff')),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_OBT_APP',
            },
        ),
        migrations.CreateModel(
            name='LeavesCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowed_days', models.DateTimeField(blank=True, null=True)),
                ('credit_used', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)])),
                ('credit_remaining', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(99)])),
                ('expiry', models.DateTimeField()),
                ('is_converted', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
                ('leave_type_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.leavestype')),
            ],
            options={
                'db_table': 'TBL_LEAVES_CREDIT',
            },
        ),
        migrations.CreateModel(
            name='Leaves',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cutoff_code', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('leave_date_filed', models.DateTimeField(auto_now_add=True)),
                ('leave_type', models.CharField(max_length=3)),
                ('leave_remarks', models.TextField(max_length=75)),
                ('leave_date_from', models.DateTimeField()),
                ('leave_date_to', models.DateTimeField()),
                ('leave_approval_status', models.CharField(choices=[('P1', 'Pending'), ('P2', 'Pending2'), ('APD', 'Approved'), ('DIS', 'Disapproved')], max_length=3)),
                ('leave_reason_disapproval', models.TextField(blank=True, max_length=100, null=True)),
                ('leave_total_hours', models.PositiveSmallIntegerField()),
                ('leave_approver1_empno', models.PositiveSmallIntegerField()),
                ('leave_date_approved1', models.DateTimeField(blank=True, null=True)),
                ('leave_approver2_empno', models.PositiveSmallIntegerField()),
                ('leave_date_approved2', models.DateTimeField(blank=True, null=True)),
                ('leave_number_days', models.PositiveSmallIntegerField()),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_LEAVES_APP',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='pagibig_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.pagibig'),
        ),
        migrations.AddField(
            model_name='employee',
            name='payroll_group_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.payrollgroup'),
        ),
        migrations.AddField(
            model_name='employee',
            name='philhealth_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.philhealth'),
        ),
        migrations.AddField(
            model_name='employee',
            name='position_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.position'),
        ),
        migrations.AddField(
            model_name='employee',
            name='rank_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.rank'),
        ),
        migrations.AddField(
            model_name='employee',
            name='sssid_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.sss'),
        ),
        migrations.AddField(
            model_name='employee',
            name='tax_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.tax'),
        ),
        migrations.CreateModel(
            name='DTRSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_date', models.DateField()),
                ('shift_name', models.CharField(choices=[('morning', 'Morning Shift'), ('mid', 'Mid Shift'), ('night', 'Night Shift')], max_length=25)),
                ('date_in', models.DateTimeField()),
                ('date_out', models.DateTimeField()),
                ('sched_timein', models.DateTimeField()),
                ('sched_timeout', models.DateTimeField()),
                ('is_sched_restday', models.BooleanField()),
                ('lunch_out', models.DateTimeField()),
                ('lunch_in', models.DateTimeField()),
                ('overbreak', models.PositiveSmallIntegerField()),
                ('lates', models.PositiveSmallIntegerField()),
                ('adjusted_timein', models.DateTimeField()),
                ('adjusted_timeout', models.DateTimeField()),
                ('total_hours', models.PositiveSmallIntegerField()),
                ('is_paid_leave', models.BooleanField(default=False)),
                ('paid_leave_type', models.CharField(max_length=50)),
                ('reg_ot_total', models.PositiveSmallIntegerField()),
                ('nd_ot_total', models.PositiveSmallIntegerField()),
                ('is_obt', models.BooleanField(default=False)),
                ('is_sp_holiday', models.BooleanField(default=False)),
                ('is_reg_holiday', models.BooleanField(default=False)),
                ('is_absent', models.BooleanField(default=False)),
                ('pay_period', models.DateTimeField()),
                ('is_computed', models.BooleanField(default=False)),
                ('cutoff_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.cutoff')),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_DTR_SUMMARY',
            },
        ),
        migrations.CreateModel(
            name='DTRCutoff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_date_from', models.DateField()),
                ('business_date_to', models.DateField()),
                ('hours_total', models.PositiveSmallIntegerField()),
                ('overbreak_total', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('lates_total', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('paid_leaves_total', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('reg_ot_total', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('nd_ot_total', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sp_holiday_total', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('reg_holiday_total', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('absent_total', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('leaves_type_used', models.CharField(blank=True, max_length=40, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('cutoff_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.cutoff')),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee')),
            ],
            options={
                'db_table': 'TBL_DTR_CUTOFF_SUMMARY',
            },
        ),
        migrations.CreateModel(
            name='DTR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_bio', models.DateTimeField()),
                ('flag1_in_out', models.BooleanField()),
                ('flag2_lout_lin', models.BooleanField(blank=True, null=True)),
                ('entry_type', models.CharField(blank=True, max_length=4, null=True)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('bio_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dtrbio_id', to='user.employee', to_field='bio_id')),
                ('branch_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.branch')),
                ('emp_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
                ('schedule_daily_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.scheduledaily')),
            ],
            options={
                'db_table': 'TBL_DTR_ENTRY',
            },
        ),
        migrations.AddField(
            model_name='division',
            name='div_lead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no'),
        ),
        migrations.AddField(
            model_name='department',
            name='dept_lead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no'),
        ),
        migrations.AddField(
            model_name='cutoff',
            name='division_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.division'),
        ),
        migrations.AddField(
            model_name='cutoff',
            name='payroll_group_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.payrollgroup'),
        ),
        migrations.AddField(
            model_name='citymunicipality',
            name='province_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.province'),
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(max_length=15)),
                ('table_affected', models.CharField(max_length=30)),
                ('action_remarks', models.TextField(max_length=75)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_AUDITTRAIL',
            },
        ),
        migrations.CreateModel(
            name='Adjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deducted_amount', models.FloatField()),
                ('added_amount', models.FloatField()),
                ('adjustment_remark', models.TextField(max_length=100)),
                ('adjustment_remark2', models.TextField(max_length=100)),
                ('prepared_by_empno', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('approved_by_empno', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('is_computed', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_deleted', models.DateTimeField(blank=True, null=True)),
                ('cutoff_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.cutoff')),
                ('emp_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
            ],
            options={
                'db_table': 'TBL_ADJUSTMENT_ENTRY',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=8, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('role', models.PositiveSmallIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_logged_in', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('failed_login_attempts', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('last_login', models.DateTimeField(default=datetime.datetime(2023, 1, 1, 0, 0))),
                ('old_password', models.CharField(default='N/A', max_length=128)),
                ('date_password_changed', models.DateField(blank=True, null=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_deleted', models.DateField(blank=True, null=True)),
                ('emp_no', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='emp_no')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'TBL_USER',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
