# Generated by Django 4.2 on 2023-05-05 02:49

import datetime
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_number', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('transaction_type', models.CharField(max_length=15)),
                ('table_affected', models.CharField(max_length=30)),
                ('action_remarks', models.TextField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'TBL_AUDITTRAIL',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_number', models.PositiveSmallIntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(9990)])),
                ('first_name', models.CharField(max_length=25)),
                ('middle_name', models.CharField(blank=True, max_length=25, null=True)),
                ('last_name', models.CharField(max_length=25)),
                ('suffix', models.CharField(blank=True, max_length=4, null=True)),
                ('birthday', models.DateField()),
                ('birth_place', models.CharField(blank=True, max_length=50, null=True)),
                ('civil_status', models.PositiveSmallIntegerField(default=1)),
                ('gender', models.CharField(max_length=1)),
                ('address', models.TextField(max_length=50)),
                ('provincial_address', models.TextField(blank=True, max_length=50, null=True)),
                ('mobile_phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('date_hired', models.DateField()),
                ('date_resigned', models.DateField(blank=True, null=True)),
                ('approver', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_deleted', models.DateField(blank=True, null=True)),
                ('branch_code', models.CharField(default='main', max_length=15)),
                ('department_code', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('division_code', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('payroll_group_code', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('position_code', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('rank_code', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('tax_code', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('city_code', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pagibig_code', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sssid_code', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('philhealth_code', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TBL_EMPLOYEE_PROFILE',
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holiday_date', models.DateField()),
                ('holiday_description', models.TextField(max_length=100)),
                ('holiday_type', models.CharField(max_length=5, unique=True)),
                ('holiday_location', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'TBL_HOLIDAY',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'TBL_PROVINCE',
            },
        ),
        migrations.CreateModel(
            name='Overtime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cutoff_id', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('ot_date_filed', models.DateTimeField(auto_now_add=True)),
                ('ot_type', models.CharField(max_length=2)),
                ('ot_remarks', models.TextField(max_length=100)),
                ('ot_date_from', models.DateTimeField()),
                ('ot_date_to', models.DateTimeField()),
                ('ot_approval_status', models.PositiveSmallIntegerField()),
                ('ot_reason_disapproval', models.TextField(max_length=100)),
                ('ot_total_hours', models.PositiveSmallIntegerField()),
                ('ot_date_approved1', models.DateTimeField(blank=True, null=True)),
                ('ot_date_approved2', models.DateTimeField(blank=True, null=True)),
                ('employee_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='employee_number')),
            ],
            options={
                'db_table': 'TBL_OVERTIME_APP',
            },
        ),
        migrations.CreateModel(
            name='OBT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cutoff_id', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('obt_date_filed', models.DateTimeField(auto_now_add=True)),
                ('obt_type', models.CharField(max_length=20)),
                ('obt_location', models.TextField(max_length=50)),
                ('obt_remarks', models.TextField(max_length=100)),
                ('obt_date_from', models.DateTimeField()),
                ('obt_date_to', models.DateTimeField()),
                ('obt_approval_status', models.CharField(max_length=3)),
                ('obt_reason_disapproval', models.TextField(blank=True, max_length=50, null=True)),
                ('obt_total_hour', models.PositiveSmallIntegerField()),
                ('obt_date_approved1', models.DateTimeField(blank=True, null=True)),
                ('obt_date_approved2', models.DateTimeField(blank=True, null=True)),
                ('employee_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='employee_number')),
            ],
            options={
                'db_table': 'TBL_OBT_APP',
            },
        ),
        migrations.CreateModel(
            name='Leaves',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cutoff_id', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('leave_date_filed', models.DateTimeField(auto_now_add=True)),
                ('leave_type', models.CharField(max_length=3)),
                ('leave_remarks', models.TextField(max_length=100)),
                ('leave_date_from', models.DateTimeField()),
                ('leave_date_to', models.DateTimeField()),
                ('leave_approval_status', models.CharField(max_length=3)),
                ('leave_reason_disapproval', models.TextField(max_length=100)),
                ('leave_total_hours', models.PositiveSmallIntegerField()),
                ('leave_date_approved1', models.DateTimeField(blank=True, null=True)),
                ('leave_date_approved2', models.DateTimeField(blank=True, null=True)),
                ('leave_number_days', models.PositiveSmallIntegerField()),
                ('employee_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='employee_number')),
            ],
            options={
                'db_table': 'TBL_LEAVES_APP',
            },
        ),
        migrations.CreateModel(
            name='DTRSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cutoff_id', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('business_datetime', models.DateTimeField()),
                ('shift_name', models.CharField(max_length=10)),
                ('date_in', models.DateTimeField()),
                ('date_out', models.DateTimeField()),
                ('sched_timein', models.DateTimeField()),
                ('sched_timeout', models.DateTimeField()),
                ('sched_restday', models.BooleanField()),
                ('lunch_out', models.DateTimeField()),
                ('lunch_in', models.DateTimeField()),
                ('overbreak', models.PositiveSmallIntegerField()),
                ('lates', models.PositiveSmallIntegerField()),
                ('adjusted_timein', models.DateTimeField()),
                ('adjusted_timeout', models.DateTimeField()),
                ('total_hours', models.PositiveSmallIntegerField()),
                ('paid_leave', models.BooleanField(default=False)),
                ('paid_leave_reason', models.CharField(max_length=50)),
                ('reg_ot_total', models.PositiveSmallIntegerField()),
                ('nd_ot_total', models.PositiveSmallIntegerField()),
                ('ot_approved', models.BooleanField(default=False)),
                ('pay_period', models.DateTimeField()),
                ('is_computed', models.BooleanField(default=False)),
                ('employee_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='employee_number')),
            ],
            options={
                'db_table': 'TBL_DTR_SUMMARY',
            },
        ),
        migrations.CreateModel(
            name='DTR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio_id', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(9990)])),
                ('datetime_bio', models.DateTimeField()),
                ('flag1_in_out', models.BooleanField()),
                ('flag2_lout_lin', models.BooleanField(blank=True, null=True)),
                ('entry_type', models.CharField(max_length=5)),
                ('date_uploaded', models.DateTimeField()),
                ('processed', models.BooleanField(default=False)),
                ('sched_timein', models.DateTimeField()),
                ('sched_timeout', models.DateTimeField()),
                ('business_datetime', models.DateTimeField()),
                ('branch_code', models.CharField(default='main', max_length=15)),
                ('employee_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='employee_number')),
            ],
            options={
                'db_table': 'TBL_DTR',
            },
        ),
        migrations.CreateModel(
            name='CityMunicipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.province')),
            ],
            options={
                'db_table': 'TBL_CITYMUNICIPALITY',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=8, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('role', models.PositiveSmallIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('date_deleted', models.DateField(blank=True, null=True)),
                ('failed_login_attempts', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('last_login', models.DateTimeField(default=datetime.datetime(2023, 1, 1, 0, 0))),
                ('old_password', models.CharField(default='N/A', max_length=128)),
                ('date_password_changed', models.DateField(blank=True, null=True)),
                ('employee_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.employee', to_field='employee_number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'TBL_USER',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
